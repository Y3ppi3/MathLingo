import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext";

const Login = () => {
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [error, setError] = useState("");
    const { login } = useAuth(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const navigate = useNavigate();

    const handleLogin = async (e: React.FormEvent) => {
        e.preventDefault();
        setError("");

        try {
            // üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–Ω-–∑–∞–ø—Ä–æ—Å
            const response = await fetch("http://127.0.0.1:8000/api/login/", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email, password }),
                credentials: "include",  // üìå –†–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫—É–∫–∏
            });

            if (!response.ok) {
                throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
            }

            console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");

            // üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userResponse = await fetch("http://127.0.0.1:8000/api/me", {
                method: "GET",
                credentials: "include",  // üìå –ö—É–∫–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                headers: { "Content-Type": "application/json" },
            });

            if (!userResponse.ok) {
                throw new Error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
            }

            const userData = await userResponse.json();
            console.log("üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", userData);

            // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø–æ–ª—É—á–µ–Ω
            const token = response.headers.get("token");
            if (token) {
                login(token); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω
                navigate("/dashboard"); // ‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            } else {
                throw new Error("–¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω.");
            }
        } catch (err: unknown) {
            if (err instanceof Error) {
                console.error("‚ùå –û—à–∏–±–∫–∞:", err.message);
                setError(err.message);
            } else {
                setError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
            }
        }
    };

    return (
        <div>
            <h2>–í—Ö–æ–¥</h2>
            {error && <p style={{ color: "red" }}>{error}</p>}
            <form onSubmit={handleLogin}>
                <input
                    type="email"
                    placeholder="Email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                />
                <input
                    type="password"
                    placeholder="–ü–∞—Ä–æ–ª—å"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    required
                />
                <button type="submit">–í–æ–π—Ç–∏</button>
            </form>
        </div>
    );
};

export default Login;
