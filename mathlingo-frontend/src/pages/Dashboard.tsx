import { useEffect, useState } from "react";

// –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const API_URL = import.meta.env.VITE_API_URL;

const Dashboard = () => {
    const [userData, setUserData] = useState<any>(null);
    const [error, setError] = useState("");

    useEffect(() => {
        const fetchUserData = async () => {
            try {
                console.log("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/me...");
                const response = await fetch(`${API_URL}/api/me`, {
                    method: "GET",
                    credentials: "include",
                    headers: { "Content-Type": "application/json" },
                });

                if (!response.ok) {
                    throw new Error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.");
                }

                const data = await response.json();
                console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
                setUserData(data);
            } catch (err: unknown) {
                if (err instanceof Error) {
                    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:", err.message);
                    setError(err.message);
                } else {
                    setError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
                }
            }
        };

        fetchUserData();
    }, []);

    if (error) {
        return <div>–û—à–∏–±–∫–∞: {error}</div>;
    }

    if (!userData) {
        return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
    }

    return (
        <div>
            <h2>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
            <p>ID: {userData.id}</p>
            <p>–ò–º—è: {userData.username}</p>
            <p>Email: {userData.email}</p>
        </div>
    );
};

export default Dashboard;
